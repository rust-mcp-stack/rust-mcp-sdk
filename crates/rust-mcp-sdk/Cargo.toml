[package]
name = "rust-mcp-sdk"
version = "0.3.0"
authors = ["Ali Hashemi"]
categories = ["data-structures", "parser-implementations", "parsing"]
description = "An asynchronous SDK and framework for building MCP-Servers and MCP-Clients, leveraging the rust-mcp-schema for type safe MCP Schema Objects."
repository = "https://github.com/rust-mcp-stack/rust-mcp-sdk"
documentation = "https://docs.rs/rust-mcp-sdk"
keywords = ["rust-mcp-stack", "model", "context", "protocol", "sdk"]
license = "MIT"
edition = "2021"

[dependencies]
rust-mcp-schema = { workspace = true }
rust-mcp-transport = { workspace = true }
rust-mcp-macros = { workspace = true, optional = true }

tokio.workspace = true
serde = { workspace = true }
serde_json = { workspace = true }
async-trait = { workspace = true }
futures = { workspace = true }
thiserror = { workspace = true }

axum = { workspace = true, optional = true }
uuid = { workspace = true, features = ["v4"], optional = true }
tokio-stream = { workspace = true, optional = true }
axum-server = { version = "0.7", features = [], optional = true }
tracing.workspace = true

# rustls = { workspace = true, optional = true }
hyper = { version = "1.6.0" }

[dev-dependencies]
reqwest = { workspace = true, features = ["stream"] }
tracing-subscriber = { workspace = true, features = [
    "env-filter",
    "std",
    "fmt",
] }

[features]
default = [
    "client",
    "server",
    "macros",
    "hyper-server",
    "ssl",
] # All features enabled by default
server = [] # Server feature
client = [] # Client feature
hyper-server = ["axum", "axum-server", "uuid", "tokio-stream"]
ssl = ["axum-server/tls-rustls"]
macros = ["rust-mcp-macros"]

[lints]
workspace = true
