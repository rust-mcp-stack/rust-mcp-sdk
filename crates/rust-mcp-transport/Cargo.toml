[package]
name = "rust-mcp-transport"
version = "0.3.1"
authors = ["Ali Hashemi"]
categories = ["data-structures"]
description = "Transport implementations for the MCP (Model Context Protocol) within the rust-mcp-sdk ecosystem, enabling asynchronous data exchange and efficient message handling between MCP clients and servers."
repository = "https://github.com/rust-mcp-stack/rust-mcp-sdk"
documentation = "https://docs.rs/rust-mcp-transport"
keywords = ["rust-mcp-stack", "model", "context", "protocol", "sdk"]
license = "MIT"
edition = "2021"

[dependencies]
rust-mcp-schema = { workspace = true }

async-trait = { workspace = true }
tokio = { workspace = true }
futures = { workspace = true }
thiserror = { workspace = true }
serde_json = { workspace = true }
serde = { workspace = true }
axum = { workspace = true }
uuid = { workspace = true, features = ["v4"] }
tokio-stream = { workspace = true }
reqwest = { workspace = true, features = ["stream"] }
bytes = { workspace = true }
tracing = { workspace = true }

[dev-dependencies]
wiremock = "0.5"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
futures = { workspace = true }
[lints]
workspace = true


# ### FEATURES #################################################################
# [features]

# default = ["stdio", "sse"] # Default features

# stdio = []
# sse = []
